Plan:
Send Team based notifications
User Preferences (get team notifications?)
ssl cert from let's encrypt
nGrok over https setup
---------------------------------------

Upcoming Plan:
*set up api test page (start by Feb 1)*
*rough layout index page (start by Feb 1)*

Validate against google login status (https://developers.google.com/identity/sign-in/web/listeners)
Check if on team when requesting badges by team (just returns 0 badges right now if not on team)
When user unsubscribes, remove endpoint
On Notification send, check if endpoint is still valid (remove if not)
Clean up API responses
Set up Test User Bots
Test APIs against odd characters
---------------------------------------

Known Bugs
---------------------------------------

Before Release:
DB Transaction rollback on failed calls?
upgrade logging to log to files / better control
Better gmail/email system token checking and error logging
log collection and analysis
externalize domain (replace all localhost references)
proper domain for vapidDetails
----------------------------------------

Test For
Names, Titles, Descriptions with quotes, brackets, parens and backslashes in them
----------------------------------------

Possibilities:
Send an id with page serve to use as a "key" for the api This will help prevent people from using the api when not from the page(probably not needed as we have cookies)
customizable notification display times
-----------------------------------------

DONE:
send invite emails
switch teams to not require a teamId AND teamName (drop the need for name)
retry promises during creation that end up with non-unique ids
Generate user ids, don't use google id
Save common user details in cookie / don't query DB every time!
Add check logged in middleware
List badges sent to specific user in a team
List badges sent to specific user
List All Sent Badges
Block/Unblock user
List My Badges
Badges By Team (team/badge integration)
Remove Badge Completely
Remove Badge For Me
Create/Store badges per user
Allow Team Member to remove themselves
Finish accept invite flow
- Take code, add user to team based on the invite db object
- Remove invite db object
- redirect back to index page

Handle Not logged in flow for accept invite
- store invite code in session (full invite url)
req.session.return_url = req.query.return_url;
- handle the login through google
- redirect back to return_url from session
- clean up return url from session

List Team Members
Moderator Remove Team Members
Moderator add additional moderator
Delete Team (moderator only)
-----------------------------------------

Fixed Bugs:
listMyTeams isn't returning anything for non-mods
listMyTeams returns many duplicates for mods
------------------------------------------